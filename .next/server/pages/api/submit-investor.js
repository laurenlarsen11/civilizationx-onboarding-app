"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/submit-investor";
exports.ids = ["pages/api/submit-investor"];
exports.modules = {

/***/ "nodemailer":
/*!*****************************!*\
  !*** external "nodemailer" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("nodemailer");

/***/ }),

/***/ "node-fetch":
/*!*****************************!*\
  !*** external "node-fetch" ***!
  \*****************************/
/***/ ((module) => {

module.exports = import("node-fetch");;

/***/ }),

/***/ "(api)/./pages/api/submit-investor.js":
/*!**************************************!*\
  !*** ./pages/api/submit-investor.js ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-fetch */ \"node-fetch\");\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! nodemailer */ \"nodemailer\");\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(nodemailer__WEBPACK_IMPORTED_MODULE_1__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([node_fetch__WEBPACK_IMPORTED_MODULE_0__]);\nnode_fetch__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nasync function handler(req, res) {\n    const apiKey = process.env.AIRTABLE_API_KEY;\n    const baseId = process.env.AIRTABLE_BASE_ID;\n    const tableName = process.env.AIRTABLE_TABLE_NAME;\n    const url = `https://api.airtable.com/v0/${baseId}/${tableName}`;\n    const form = req.body;\n    try {\n        // 1. Save to Airtable\n        const airtableRes = await (0,node_fetch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(url, {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${apiKey}`,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                fields: {\n                    \"First Name\": form.firstName,\n                    \"Surname\": form.surname,\n                    \"Email Address\": form.email,\n                    \"LinkedIn\": form.linkedIn,\n                    \"Job Title\": form.jobTitle,\n                    \"Company\": form.company,\n                    \"Location\": form.location,\n                    \"Description\": form.description,\n                    \"What's your motivation to join CivilizationX?\": form.motivation,\n                    \"What do you hope to get out of becoming a member?\": form.goals,\n                    \"Investment Experience\": form.experience,\n                    \"Angel Investment Made?\": form.angel,\n                    \"Investment Areas\": form.areas\n                }\n            })\n        });\n        const airtableData = await airtableRes.json();\n        if (!airtableData.id) throw new Error(\"Airtable insert failed\");\n        // 2. Send Welcome Email\n        const transporter = nodemailer__WEBPACK_IMPORTED_MODULE_1___default().createTransport({\n            service: \"gmail\",\n            auth: {\n                user: process.env.GMAIL_USER,\n                pass: process.env.GMAIL_PASS\n            }\n        });\n        const mailOptions = {\n            from: `\"CivilizationX\" <${process.env.GMAIL_USER}>`,\n            to: form.email,\n            subject: \"Welcome to CivilizationX!\",\n            text: `Hi ${form.firstName},\n\nThank you for your interest in joining CivilizationX. CivilizationX is a global syndicate of startups, advisors, and investors working at the intersection of AI and deep tech. Our mission is to accelerate innovation in AI infrastructure by supporting highly technical early-stage teams. We do this by offering:\n\n- Exclusive deal flow in AI infra and deep tech\n- Hands-off investing (we handle diligence, terms, etc.)\n- Opportunities to actively engage with portfolio startups\n- Learning and networking through events, talks, and a monthly newsletter\n\nI'd love to invite you to a short introduction call so we can learn more about your interests and share how you can get the most out of CivilizationX.\n\nWould you be available for a quick 20-minute call next week? Feel free to propose a time that works best for you and I will send an invite.\n\nLooking forward to connecting!\n\nMabel Ubong  \nCivilizationX  \nhttps://www.civilizationx.co.uk  \nX (formerly Twitter) | LinkedIn  \nBook a Meeting: https://calendar.app.google/NLgc8M2hByd65TYt8`\n        };\n        await transporter.sendMail(mailOptions);\n        res.status(200).json({\n            success: true\n        });\n    } catch (error) {\n        console.error(\"Submit error:\", error);\n        res.status(500).json({\n            error: \"Something went wrong.\"\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvc3VibWl0LWludmVzdG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBK0I7QUFDSztBQUVyQixlQUFlRSxRQUFRQyxHQUFHLEVBQUVDLEdBQUc7SUFDNUMsTUFBTUMsU0FBU0MsUUFBUUMsR0FBRyxDQUFDQyxnQkFBZ0I7SUFDM0MsTUFBTUMsU0FBU0gsUUFBUUMsR0FBRyxDQUFDRyxnQkFBZ0I7SUFDM0MsTUFBTUMsWUFBWUwsUUFBUUMsR0FBRyxDQUFDSyxtQkFBbUI7SUFFakQsTUFBTUMsTUFBTSxDQUFDLDRCQUE0QixFQUFFSixPQUFPLENBQUMsRUFBRUUsVUFBVSxDQUFDO0lBQ2hFLE1BQU1HLE9BQU9YLElBQUlZLElBQUk7SUFFckIsSUFBSTtRQUNGLHNCQUFzQjtRQUN0QixNQUFNQyxjQUFjLE1BQU1oQixzREFBS0EsQ0FBQ2EsS0FBSztZQUNuQ0ksUUFBUTtZQUNSQyxTQUFTO2dCQUNQQyxlQUFlLENBQUMsT0FBTyxFQUFFZCxPQUFPLENBQUM7Z0JBQ2pDLGdCQUFnQjtZQUNsQjtZQUNBVSxNQUFNSyxLQUFLQyxTQUFTLENBQUM7Z0JBQ25CQyxRQUFRO29CQUNOLGNBQWNSLEtBQUtTLFNBQVM7b0JBQzVCLFdBQVdULEtBQUtVLE9BQU87b0JBQ3ZCLGlCQUFpQlYsS0FBS1csS0FBSztvQkFDM0IsWUFBWVgsS0FBS1ksUUFBUTtvQkFDekIsYUFBYVosS0FBS2EsUUFBUTtvQkFDMUIsV0FBV2IsS0FBS2MsT0FBTztvQkFDdkIsWUFBWWQsS0FBS2UsUUFBUTtvQkFDekIsZUFBZWYsS0FBS2dCLFdBQVc7b0JBQy9CLGlEQUFpRGhCLEtBQUtpQixVQUFVO29CQUNoRSxxREFBcURqQixLQUFLa0IsS0FBSztvQkFDL0QseUJBQXlCbEIsS0FBS21CLFVBQVU7b0JBQ3hDLDBCQUEwQm5CLEtBQUtvQixLQUFLO29CQUNwQyxvQkFBb0JwQixLQUFLcUIsS0FBSztnQkFDaEM7WUFDRjtRQUNGO1FBRUEsTUFBTUMsZUFBZSxNQUFNcEIsWUFBWXFCLElBQUk7UUFFM0MsSUFBSSxDQUFDRCxhQUFhRSxFQUFFLEVBQUUsTUFBTSxJQUFJQyxNQUFNO1FBRXRDLHdCQUF3QjtRQUN4QixNQUFNQyxjQUFjdkMsaUVBQTBCLENBQUM7WUFDN0N5QyxTQUFTO1lBQ1RDLE1BQU07Z0JBQ0pDLE1BQU10QyxRQUFRQyxHQUFHLENBQUNzQyxVQUFVO2dCQUM1QkMsTUFBTXhDLFFBQVFDLEdBQUcsQ0FBQ3dDLFVBQVU7WUFDOUI7UUFDRjtRQUVBLE1BQU1DLGNBQWM7WUFDbEJDLE1BQU0sQ0FBQyxpQkFBaUIsRUFBRTNDLFFBQVFDLEdBQUcsQ0FBQ3NDLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDbkRLLElBQUlwQyxLQUFLVyxLQUFLO1lBQ2QwQixTQUFTO1lBQ1RDLE1BQU0sQ0FBQyxHQUFHLEVBQUV0QyxLQUFLUyxTQUFTLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7NkRBbUI0QixDQUFDO1FBQzFEO1FBRUEsTUFBTWlCLFlBQVlhLFFBQVEsQ0FBQ0w7UUFFM0I1QyxJQUFJa0QsTUFBTSxDQUFDLEtBQUtqQixJQUFJLENBQUM7WUFBRWtCLFNBQVM7UUFBSztJQUN2QyxFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLGlCQUFpQkE7UUFDL0JwRCxJQUFJa0QsTUFBTSxDQUFDLEtBQUtqQixJQUFJLENBQUM7WUFBRW1CLE9BQU87UUFBd0I7SUFDeEQ7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2NpdmlsaXphdGlvbngtb25ib2FyZGluZy8uL3BhZ2VzL2FwaS9zdWJtaXQtaW52ZXN0b3IuanM/ODBkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZmV0Y2ggZnJvbSAnbm9kZS1mZXRjaCc7XG5pbXBvcnQgbm9kZW1haWxlciBmcm9tICdub2RlbWFpbGVyJztcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuICBjb25zdCBhcGlLZXkgPSBwcm9jZXNzLmVudi5BSVJUQUJMRV9BUElfS0VZO1xuICBjb25zdCBiYXNlSWQgPSBwcm9jZXNzLmVudi5BSVJUQUJMRV9CQVNFX0lEO1xuICBjb25zdCB0YWJsZU5hbWUgPSBwcm9jZXNzLmVudi5BSVJUQUJMRV9UQUJMRV9OQU1FO1xuXG4gIGNvbnN0IHVybCA9IGBodHRwczovL2FwaS5haXJ0YWJsZS5jb20vdjAvJHtiYXNlSWR9LyR7dGFibGVOYW1lfWA7XG4gIGNvbnN0IGZvcm0gPSByZXEuYm9keTtcblxuICB0cnkge1xuICAgIC8vIDEuIFNhdmUgdG8gQWlydGFibGVcbiAgICBjb25zdCBhaXJ0YWJsZVJlcyA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHthcGlLZXl9YCxcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGZpZWxkczoge1xuICAgICAgICAgIFwiRmlyc3QgTmFtZVwiOiBmb3JtLmZpcnN0TmFtZSxcbiAgICAgICAgICBcIlN1cm5hbWVcIjogZm9ybS5zdXJuYW1lLFxuICAgICAgICAgIFwiRW1haWwgQWRkcmVzc1wiOiBmb3JtLmVtYWlsLFxuICAgICAgICAgIFwiTGlua2VkSW5cIjogZm9ybS5saW5rZWRJbixcbiAgICAgICAgICBcIkpvYiBUaXRsZVwiOiBmb3JtLmpvYlRpdGxlLFxuICAgICAgICAgIFwiQ29tcGFueVwiOiBmb3JtLmNvbXBhbnksXG4gICAgICAgICAgXCJMb2NhdGlvblwiOiBmb3JtLmxvY2F0aW9uLFxuICAgICAgICAgIFwiRGVzY3JpcHRpb25cIjogZm9ybS5kZXNjcmlwdGlvbixcbiAgICAgICAgICBcIldoYXQncyB5b3VyIG1vdGl2YXRpb24gdG8gam9pbiBDaXZpbGl6YXRpb25YP1wiOiBmb3JtLm1vdGl2YXRpb24sXG4gICAgICAgICAgXCJXaGF0IGRvIHlvdSBob3BlIHRvIGdldCBvdXQgb2YgYmVjb21pbmcgYSBtZW1iZXI/XCI6IGZvcm0uZ29hbHMsXG4gICAgICAgICAgXCJJbnZlc3RtZW50IEV4cGVyaWVuY2VcIjogZm9ybS5leHBlcmllbmNlLFxuICAgICAgICAgIFwiQW5nZWwgSW52ZXN0bWVudCBNYWRlP1wiOiBmb3JtLmFuZ2VsLFxuICAgICAgICAgIFwiSW52ZXN0bWVudCBBcmVhc1wiOiBmb3JtLmFyZWFzLFxuICAgICAgICB9LFxuICAgICAgfSksXG4gICAgfSk7XG5cbiAgICBjb25zdCBhaXJ0YWJsZURhdGEgPSBhd2FpdCBhaXJ0YWJsZVJlcy5qc29uKCk7XG5cbiAgICBpZiAoIWFpcnRhYmxlRGF0YS5pZCkgdGhyb3cgbmV3IEVycm9yKCdBaXJ0YWJsZSBpbnNlcnQgZmFpbGVkJyk7XG5cbiAgICAvLyAyLiBTZW5kIFdlbGNvbWUgRW1haWxcbiAgICBjb25zdCB0cmFuc3BvcnRlciA9IG5vZGVtYWlsZXIuY3JlYXRlVHJhbnNwb3J0KHtcbiAgICAgIHNlcnZpY2U6ICdnbWFpbCcsXG4gICAgICBhdXRoOiB7XG4gICAgICAgIHVzZXI6IHByb2Nlc3MuZW52LkdNQUlMX1VTRVIsXG4gICAgICAgIHBhc3M6IHByb2Nlc3MuZW52LkdNQUlMX1BBU1MsXG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgY29uc3QgbWFpbE9wdGlvbnMgPSB7XG4gICAgICBmcm9tOiBgXCJDaXZpbGl6YXRpb25YXCIgPCR7cHJvY2Vzcy5lbnYuR01BSUxfVVNFUn0+YCxcbiAgICAgIHRvOiBmb3JtLmVtYWlsLFxuICAgICAgc3ViamVjdDogJ1dlbGNvbWUgdG8gQ2l2aWxpemF0aW9uWCEnLFxuICAgICAgdGV4dDogYEhpICR7Zm9ybS5maXJzdE5hbWV9LFxuXG5UaGFuayB5b3UgZm9yIHlvdXIgaW50ZXJlc3QgaW4gam9pbmluZyBDaXZpbGl6YXRpb25YLiBDaXZpbGl6YXRpb25YIGlzIGEgZ2xvYmFsIHN5bmRpY2F0ZSBvZiBzdGFydHVwcywgYWR2aXNvcnMsIGFuZCBpbnZlc3RvcnMgd29ya2luZyBhdCB0aGUgaW50ZXJzZWN0aW9uIG9mIEFJIGFuZCBkZWVwIHRlY2guIE91ciBtaXNzaW9uIGlzIHRvIGFjY2VsZXJhdGUgaW5ub3ZhdGlvbiBpbiBBSSBpbmZyYXN0cnVjdHVyZSBieSBzdXBwb3J0aW5nIGhpZ2hseSB0ZWNobmljYWwgZWFybHktc3RhZ2UgdGVhbXMuIFdlIGRvIHRoaXMgYnkgb2ZmZXJpbmc6XG5cbi0gRXhjbHVzaXZlIGRlYWwgZmxvdyBpbiBBSSBpbmZyYSBhbmQgZGVlcCB0ZWNoXG4tIEhhbmRzLW9mZiBpbnZlc3RpbmcgKHdlIGhhbmRsZSBkaWxpZ2VuY2UsIHRlcm1zLCBldGMuKVxuLSBPcHBvcnR1bml0aWVzIHRvIGFjdGl2ZWx5IGVuZ2FnZSB3aXRoIHBvcnRmb2xpbyBzdGFydHVwc1xuLSBMZWFybmluZyBhbmQgbmV0d29ya2luZyB0aHJvdWdoIGV2ZW50cywgdGFsa3MsIGFuZCBhIG1vbnRobHkgbmV3c2xldHRlclxuXG5JJ2QgbG92ZSB0byBpbnZpdGUgeW91IHRvIGEgc2hvcnQgaW50cm9kdWN0aW9uIGNhbGwgc28gd2UgY2FuIGxlYXJuIG1vcmUgYWJvdXQgeW91ciBpbnRlcmVzdHMgYW5kIHNoYXJlIGhvdyB5b3UgY2FuIGdldCB0aGUgbW9zdCBvdXQgb2YgQ2l2aWxpemF0aW9uWC5cblxuV291bGQgeW91IGJlIGF2YWlsYWJsZSBmb3IgYSBxdWljayAyMC1taW51dGUgY2FsbCBuZXh0IHdlZWs/IEZlZWwgZnJlZSB0byBwcm9wb3NlIGEgdGltZSB0aGF0IHdvcmtzIGJlc3QgZm9yIHlvdSBhbmQgSSB3aWxsIHNlbmQgYW4gaW52aXRlLlxuXG5Mb29raW5nIGZvcndhcmQgdG8gY29ubmVjdGluZyFcblxuTWFiZWwgVWJvbmcgIFxuQ2l2aWxpemF0aW9uWCAgXG5odHRwczovL3d3dy5jaXZpbGl6YXRpb254LmNvLnVrICBcblggKGZvcm1lcmx5IFR3aXR0ZXIpIHwgTGlua2VkSW4gIFxuQm9vayBhIE1lZXRpbmc6IGh0dHBzOi8vY2FsZW5kYXIuYXBwLmdvb2dsZS9OTGdjOE0yaEJ5ZDY1VFl0OGAsXG4gICAgfTtcblxuICAgIGF3YWl0IHRyYW5zcG9ydGVyLnNlbmRNYWlsKG1haWxPcHRpb25zKTtcblxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgc3VjY2VzczogdHJ1ZSB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdTdWJtaXQgZXJyb3I6JywgZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6ICdTb21ldGhpbmcgd2VudCB3cm9uZy4nIH0pO1xuICB9XG59XG5cbiJdLCJuYW1lcyI6WyJmZXRjaCIsIm5vZGVtYWlsZXIiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwiYXBpS2V5IiwicHJvY2VzcyIsImVudiIsIkFJUlRBQkxFX0FQSV9LRVkiLCJiYXNlSWQiLCJBSVJUQUJMRV9CQVNFX0lEIiwidGFibGVOYW1lIiwiQUlSVEFCTEVfVEFCTEVfTkFNRSIsInVybCIsImZvcm0iLCJib2R5IiwiYWlydGFibGVSZXMiLCJtZXRob2QiLCJoZWFkZXJzIiwiQXV0aG9yaXphdGlvbiIsIkpTT04iLCJzdHJpbmdpZnkiLCJmaWVsZHMiLCJmaXJzdE5hbWUiLCJzdXJuYW1lIiwiZW1haWwiLCJsaW5rZWRJbiIsImpvYlRpdGxlIiwiY29tcGFueSIsImxvY2F0aW9uIiwiZGVzY3JpcHRpb24iLCJtb3RpdmF0aW9uIiwiZ29hbHMiLCJleHBlcmllbmNlIiwiYW5nZWwiLCJhcmVhcyIsImFpcnRhYmxlRGF0YSIsImpzb24iLCJpZCIsIkVycm9yIiwidHJhbnNwb3J0ZXIiLCJjcmVhdGVUcmFuc3BvcnQiLCJzZXJ2aWNlIiwiYXV0aCIsInVzZXIiLCJHTUFJTF9VU0VSIiwicGFzcyIsIkdNQUlMX1BBU1MiLCJtYWlsT3B0aW9ucyIsImZyb20iLCJ0byIsInN1YmplY3QiLCJ0ZXh0Iiwic2VuZE1haWwiLCJzdGF0dXMiLCJzdWNjZXNzIiwiZXJyb3IiLCJjb25zb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/submit-investor.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/submit-investor.js"));
module.exports = __webpack_exports__;

})();